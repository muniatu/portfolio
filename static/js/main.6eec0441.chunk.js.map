{"version":3,"sources":["pages/Solojuegos.js","pages/Filehippo.js","monitor.js","pages/Tokoro.js","pages/Flapimas.js","pages/Menu.js","index.js"],"names":["useHorizontal","Fragment","name","content","property","className","alt","src","InviewMonitor","props","state","classNameNotInView","childProps","childPropsNotInView","onIntersectionAll","bind","onIntersection","isFirstInView","window","IntersectionObserver","this","useInviewMonitor","intoViewMargin","threshold","_element","options","rootMargin","observer","observe","console","error","disconnect","entries","forEach","entry","target","classNameInView","classNameAboveView","classNameNotAboveView","toggleClassNameOnInView","childPropsInView","toggleChildPropsOnInView","onInView","onNotInView","repeatOnInView","nowInView","isIntersecting","toggleClassBehavior","tooglePropsBehavior","toggleBehavior","changes","Object","keys","length","setState","unobserve","boundingClientRect","right","children","React","cloneElement","ref","e","Component","defaultProps","href","width","to","App","exact","path","Menu","Solojuegos","Filehippo","Tokoro","Flapimas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eec0441.chunk.js","sourcesContent":["import React from 'react';\nimport 'typeface-pt-serif';\nimport MetaTags from 'react-meta-tags';\nimport useHorizontal from '@oberon-amsterdam/horizontal/hook';\n\n//https://medium.com/oberonamsterdam/creating-a-horizontally-scrolling-website-9b14e4e048eb\nexport default () => {\n    useHorizontal();\n    \n    return (\n        <React.Fragment>\n            <MetaTags>\n                <title>Adrià Compte | Solojuegos Design Concepts</title>\n                <meta name=\"description\" content=\"Design concepts for solojuegos and ongames\" />\n                <meta property=\"og:title\" content=\"Adrià Compte | Solojuegos Design Concepts\" />\n            </MetaTags>\n            <div className=\"flex-page-wrapper\">\n                <article className=\"main-text\">\n                    <div>\n                        <h1>Solojuegos Redesign</h1>\n                        <h2 className=\"solojuegos-subtitle\">Market Research and Design Concepts</h2>\n                        <p>\n                            One of Softonic’s biggest sources of organic traffic is free \n                            videogame downloads, through an extensive survey on the website, \n                            we identified a huge demographic of young users looking for gaming \n                            content, especially free games.\n                        </p>\n                        <p>\n                            Currently, users looking for games land in the same funnel as any \n                            other user looking for software and it feels like a specific \n                            experience for gaming would make a lot of sense, so I decided \n                            to work on a concept for solojuegos.com and ongames.com, domains \n                            owned by Softonic that currently are not being used. \n                            The theme was free-to-play games.\n                        </p>\n                        <p>\n                            The idea is to have a better showcase for all the information \n                            related to games that we already have on our site. Including news, \n                            guides, game offers, free downloands and even free online games. \n                            During the past years, the free-to-play market has seen great expansion \n                            and for example, one of the most visited pages in softonic.com during \n                            2019 was the Apex Legends program page.\n                        </p>\n                        <p>\n                            Providing a better experience to these types of users could \n                            potentially lead to better engagement and the ability to \n                            specifically work in a market focused on affiliation, a side of \n                            the business Softonic is trying to have more presence on.\n                        </p>\n                        \n                    </div>\n                </article>\n                <div className=\"image-block\">\n                    <img alt=\"solojuegos home\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1586871907/solojuegos/solojuegos-home.jpg\"/>\n                </div>\n                <div className=\"image-block\">\n                    <img alt=\"solojuegos article page\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587328984/solojuegos/solojuegos-article.jpg\"/>\n                </div>\n                <div className=\"image-block\">\n                    <img alt=\"solojuegos category page\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587328331/solojuegos/solojuegos-category.jpg\"/>\n                </div>\n                <div className=\"image-block\">\n                    <img alt=\"solojuegos game page\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587328331/solojuegos/solojuegos-app-page.jpg\"/>\n                </div>\n                <div className=\"image-block\">\n                    <img alt=\"solojuegos hardware page\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587328331/solojuegos/solojuegos-hardware.jpg\"/>\n                </div>\n                <div className=\"rowfix\"></div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport 'typeface-pt-serif';\nimport MetaTags from 'react-meta-tags';\nimport useHorizontal from '@oberon-amsterdam/horizontal/hook';\n\n//https://medium.com/oberonamsterdam/creating-a-horizontally-scrolling-website-9b14e4e048eb\nexport default () => {\n  useHorizontal();\n  \n  return (\n    <React.Fragment>\n      <MetaTags>\n        <title>Adrià Compte | Filehippo Design Concepts</title>\n        <meta name=\"description\" content=\"Design concepts for filehippo and softonic\" />\n        <meta property=\"og:title\" content=\"Adrià Compte | Filehippo Design Concepts\" />\n      </MetaTags>\n      <div className=\"flex-page-wrapper\">\n        <article className=\"main-text\">\n          <div>\n            <h1>Filehippo Redesign</h1>\n            <h2 className=\"filehippo-subtitle\">Design Concepts</h2>\n            <p>\n              FileHippo is part of the Softonic’s product family and our Product \n              Design team was asked to deliver a few design concepts to showcase \n              how we could work on improving the overall look and feel of the website.\n            </p>\n            <p>\n              The majority of the elements, monetization model and data structure is \n              very similar to softonic.com, so to me, it felt like the perfect chance \n              to try a different approach to all I had been working on during the previous months.\n            </p>\n            <p>\n              My aim was to try a layout approach similar to the one that can be seen in apkpure.com, \n              one of our direct competitors which is more focused on mobile, as mobile has always been \n              one of the pain points of Softonic’s websites.\n            </p>\n            <p>\n              In the end, I used the same design with two different brandings to see how it would fit, \n              and although the available budget at that moment didn’t allow us to explore further on \n              the concept, these mockups were used later on as inspiration to revise softonic.com's \n              design system in order to transition from an adaptive website to a responsive ecosystem.\n            </p>\n          </div>\n        </article>\n        <div className=\"image-block\">\n          <img alt=\"solojuegos article page\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587332401/filehippo/filehippo-concept.jpg\"/>\n        </div>\n        <div className=\"image-block\">\n          <img alt=\"solojuegos home\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587332401/filehippo/softonic-concept.jpg\"/>\n        </div>\n        <div className=\"rowfix\"></div>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass InviewMonitor extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      className: props.classNameNotInView,\n      childProps: props.childPropsNotInView\n    }\n    this.onIntersectionAll = this.onIntersectionAll.bind(this)\n    this.onIntersection = this.onIntersection.bind(this)\n\n    this.isFirstInView = true\n  }\n  componentDidMount() {\n    if (!window.IntersectionObserver) {\n      console.error(`react-inview-monitor found no support for IntersectionObserver.\nPerhaps use a polyfill like: https://cdn.polyfill.io/v2/polyfill.js?features=IntersectionObserver ?`)\n      return\n    }\n    const { useInviewMonitor, intoViewMargin, threshold } = this.props\n    if (\n      !this._element ||\n      !useInviewMonitor ||\n      (typeof useInviewMonitor === 'function' && !useInviewMonitor())\n    ) {\n      return\n    }\n    const options = {\n      rootMargin: intoViewMargin,\n      threshold\n    }\n    // any performance benefits from trying to re-use the observer?\n    // possible enhancement to add later on.\n    this.observer = new window.IntersectionObserver(\n      this.onIntersectionAll,\n      options\n    )\n    this.observer.observe(this._element)\n  }\n  componentWillUnmount() {\n    this.observer && this.observer.disconnect()\n  }\n  onIntersectionAll(entries) {\n    entries.forEach(this.onIntersection)\n  }\n  onIntersection(entry) {\n    if (entry.target !== this._element) {\n      // this check only makes sense as long as we _dont_ share the same observer\n      // between component instances.\n      return\n    }\n    const {\n      classNameNotInView,\n      classNameInView,\n      classNameAboveView,\n      classNameNotAboveView,\n      toggleClassNameOnInView,\n      childPropsInView,\n      childPropsNotInView,\n      toggleChildPropsOnInView,\n      onInView,\n      onNotInView,\n      repeatOnInView\n    } = this.props\n\n    const nowInView = entry.isIntersecting\n    const isFirstInView = nowInView && this.isFirstInView\n    if (isFirstInView) {\n      // single out just the first inView\n      this.isFirstInView = false\n    }\n\n    const toggleClassBehavior =\n      (typeof classNameInView === 'string' ||\n        typeof classNameAboveView === 'string') &&\n      toggleClassNameOnInView\n    const tooglePropsBehavior = childPropsInView && toggleChildPropsOnInView\n    const toggleOnInViewBehavior = (onInView || onNotInView) && repeatOnInView\n    const toggleBehavior =\n      toggleClassBehavior || tooglePropsBehavior || toggleOnInViewBehavior\n\n    if (nowInView && !toggleBehavior) {\n      const changes = {}\n      if (typeof classNameInView === 'string')\n        changes.className = classNameInView\n      if (childPropsInView) changes.childProps = childPropsInView\n      if (Object.keys(changes).length) {\n        this.setState(changes)\n      }\n      if (onInView && typeof onInView === 'function') {\n        onInView(entry)\n      }\n      this.observer.unobserve(entry.target)\n      // is there any point trying to determine whether observer is now\n      // no longer observering anything, and hence should be disconnected,\n      // or is this kind of automatic?\n      // To be investigated.\n      return\n    }\n\n    if (toggleBehavior) {\n      // Check if we scrolled past view\n      if (typeof classNameAboveView === 'string') {\n        if (\n          // we just left the view\n          !nowInView &&\n          // are we now above it (i.e. scrolled past)\n          entry.boundingClientRect.right <= 0\n        ) {\n          this.setState({\n            className: classNameAboveView\n          })\n        } else {\n          this.setState({\n            className: classNameNotAboveView || ''\n          })\n        }\n        return\n      }\n\n      // check regular in/out of view\n      if (nowInView) {\n        // just entered view\n        const changes = {}\n        if (toggleClassBehavior || isFirstInView)\n          changes.className = classNameInView\n        if (tooglePropsBehavior || isFirstInView)\n          changes.childProps = childPropsInView\n        if (Object.keys(changes).length) {\n          this.setState(changes)\n        }\n        if (onInView && typeof onInView === 'function') {\n          onInView(entry)\n        }\n      } else {\n        // just left view\n        const changes = {}\n        if (toggleClassBehavior) changes.className = classNameNotInView\n        if (tooglePropsBehavior) changes.childProps = childPropsNotInView\n        if (Object.keys(changes).length) {\n          this.setState(changes)\n        }\n        if (onNotInView && typeof onNotInView === 'function') {\n          onNotInView(entry)\n        }\n      }\n    }\n  }\n  render() {\n    const { childProps, className } = this.state\n    let { useInviewMonitor, children } = this.props\n    if (childProps && Object.keys(childProps).length) {\n      children = React.cloneElement(children, childProps)\n    }\n    return (\n      <div\n        className={className}\n        ref={e => {\n          if (e) {\n            this._element = e\n          }\n        }}\n      >\n        {children}\n      </div>\n    )\n  }\n}\n\nInviewMonitor.propTypes = {\n  // common usage: animate classes in onScrollIntoView, to trigger fade in etc animations\n  classNameInView: PropTypes.string,\n  // can be used to hide elements to be animated in.\n  classNameNotInView: PropTypes.string,\n  // can be used as a trigger for \"scrolled past view\", f.e. for sticky headers\n  classNameAboveView: PropTypes.string,\n  classNameNotAboveView: PropTypes.string,\n  // can be used to switch classes on/off, for fixed navigation based on scroll point, etc\n  toggleClassNameOnInView: PropTypes.bool,\n\n  // another use for the InviewMonitor is to start passing a prop into an element\n  // only when it has been scrolled into view; f.e. to autoplay a video.\n  childPropsInView: PropTypes.object,\n  childPropsNotInView: PropTypes.object,\n  // can be used to turn prop(s) on/off based of on view, f.e. stop/start video/sound\n  toggleChildPropsOnInView: PropTypes.bool,\n\n  // can be used to track elements coming into view\n  onInView: PropTypes.func,\n  onNotInView: PropTypes.func,\n  repeatOnInView: PropTypes.bool,\n\n  // whether to run any scroll monintoring at all;\n  // because easier to toggle this prop, then toggle not using the component at all.\n  useInviewMonitor: PropTypes.func,\n\n  intoViewMargin: PropTypes.string,\n  threshold: PropTypes.number\n}\nInviewMonitor.defaultProps = {\n  classNameNotInView: '',\n  childPropsNotInView: {},\n  useInviewMonitor: () => true,\n  intoViewMargin: '-25%',\n  threshold: 0\n}\n\nexport default InviewMonitor","import React from 'react';\nimport 'typeface-pt-serif';\nimport MetaTags from 'react-meta-tags';\nimport useHorizontal from '@oberon-amsterdam/horizontal/hook';\nimport InViewMonitor from '../monitor';\nimport \"animate.css/animate.min.css\";\n\n//https://medium.com/oberonamsterdam/creating-a-horizontally-scrolling-website-9b14e4e048eb\nexport default () => {\n  useHorizontal();\n  \n  return (\n    <React.Fragment>\n      <MetaTags>\n          <title>Adrià Compte | Tokoro Branding & Design Concepts</title>\n          <meta name=\"description\" content=\"Design concepts for solojuegos and ongames\" />\n          <meta property=\"og:title\" content=\"Adrià Compte | Solojuegos Design Concepts\" />\n      </MetaTags>\n      <div className=\"flex-page-wrapper\">\n          <article className=\"main-text\">\n            <div>\n              <h1>Tokoro</h1>\n              <h2 className=\"tokoro-subtitle\">Branding & Design Concepts</h2>\n              <p>\n                While working in the tech industry it's easy to come up with new ideas\n                for websites or applications and start side projects that might be\n                never finished. This is an example of one of those projects.\n              </p>\n              <p>\n                Tokoro means place in Japanese, this app intended to be a friendly way to share\n                your favourite places in the cities you visited or lived in. Very similar to \n                what mapstr does.\n              </p>\n              <p>\n                I started this project with a couple of friends and as I liked the concept and\n                enjoyed the process of designing it, came up with a name, made the initial Branding\n                and created some high fidelity mockups to try to start a new design system from \n                scratch on my own.\n              </p>\n              <p>\n                Here are some screenshots of what the app intended to be and how I thought the \n                interactions might take place. There wasn't any extensive user research done but \n                it's based on tripadvisor and mapstr, similar projects that already exist.\n              </p>\n            </div>\n          </article>\n        <div className=\"image-block-mobile\">\n          <img alt=\"tokoro branding\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587333992/tokoro/tokoro-branding.jpg\"/>\n        </div>\n          <div className=\"image-block-mobile\">\n            <img alt=\"tokoro login screen\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587332454/tokoro/tokoro-login.jpg\"/>\n          </div>\n          <div className=\"image-block-mobile\">\n            <img alt=\"tokoro login second step\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587332471/tokoro/tokoro-login-2.jpg\"/>\n          </div>\n          <div className=\"image-block-mobile\">\n            <img alt=\"tokoro login third step\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587332471/tokoro/tokoro-login-3.jpg\"/>\n          </div>\n          <div className=\"image-block-mobile\">\n              <img alt=\"tokoro home page\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587332471/tokoro/tokoro-home.jpg\"/>\n          </div>\n          <div className=\"image-block-mobile\">\n            <img alt=\"tokoro home page extended\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587336760/tokoro/tokoro-home-2.jpg\"/>\n          </div>\n          <InViewMonitor\n            classNameNotInView='vis-hidden'\n            classNameInView='animated fadeInRight'\n          >\n          <div className=\"image-block-mobile\">\n            <img alt=\"tokoro map\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587332472/tokoro/tokoro-map.jpg\"/>\n          </div>\n          </InViewMonitor>\n          <InViewMonitor\n            classNameNotInView='vis-hidden'\n            classNameInView='animated fadeInRight'\n          >\n          <div className=\"image-block-mobile\">\n            <img alt=\"tokoro map extended\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587336771/tokoro/tokoro-map-2.jpg\"/>\n          </div>\n          </InViewMonitor>\n          <InViewMonitor\n            classNameNotInView='vis-hidden'\n            classNameInView='animated fadeInRight'\n          >\n          <div className=\"image-block-mobile\">\n            <img alt=\"tokoro activity feed\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587336764/tokoro/tokoro-acitivty-feed.jpg\"/>\n          </div>\n          </InViewMonitor>\n          <InViewMonitor\n            classNameNotInView='vis-hidden'\n            classNameInView='animated fadeInRight'\n          >\n          <div className=\"image-block-mobile rowfix\">\n            <img alt=\"tokoro profile page\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587336762/tokoro/tokoro-profile.jpg\"/>\n          </div>\n          </InViewMonitor>\n          <div className=\"rowfix\">\n          </div>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport 'typeface-pt-serif';\nimport MetaTags from 'react-meta-tags';\nimport useHorizontal from '@oberon-amsterdam/horizontal/hook';\n\n//https://medium.com/oberonamsterdam/creating-a-horizontally-scrolling-website-9b14e4e048eb\nexport default () => {\n  useHorizontal();\n  \n  return (\n    <React.Fragment>\n      <MetaTags>\n        <title>Adrià Compte | Flapimas Game Design & Development</title>\n        <meta name=\"description\" content=\"Flapimas game design and development\" />\n        <meta property=\"og:title\" content=\"Adrià Compte | Flapimas Game Design & Development\" />\n      </MetaTags>\n      <div className=\"flex-page-wrapper\">\n        <article className=\"main-text\">\n          <div>\n            <h1>Flapimas</h1>\n            <h2 className=\"flapimas-subtitle\">Game Design & Development</h2>\n            <p>\n              I made this project in 2014 just for fun as way to learn how to\n              create a game in Unity and publish my first app in the Google\n              Play Store.\n            </p>\n            <p>\n              It's basically a Flappy Bird clone where the protagonist is the \n              former Catalan president Artur Mas trying to escape from Spain.\n              An ironic view of the Catalan independence process. As a \n              curiosity, the game is pretty frustrating and never ends, \n              similar to the Spanish political conflict.\n            </p>\n            <p>\n              After I published it I didn't go for any further development but the game\n              was featured in a few local news sites, radio and even TV. It's still\n              available on the Google Play Store, feel free to try it!\n            </p>\n            <a className=\"google-play-button\" href=\"https://res.cloudinary.com/muniatu/image/upload/v1587393384/flapimas/gplay-button.png\"><img width=\"220\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587392344/gplay-button.png\" alt=\"google play button\"/></a>\n          </div>\n        </article>\n        <div className=\"image-block-mobile\">\n            <img alt=\"flapimas home\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587394168/flapimas/flapimas-screen-1.jpg\"/>\n        </div>\n        <div className=\"image-block-mobile\">\n            <img alt=\"flapimas tutorial\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587394296/flapimas/flapimas-screen-2.jpg\"/>\n        </div>\n        <div className=\"image-block-mobile\">\n            <img alt=\"solojuegos in-game\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587394168/flapimas/flapimas-screen-3.jpg\"/>\n        </div>\n        <div className=\"image-block-mobile\">\n            <img alt=\"flapimas game over\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587394168/flapimas/flapimas-screen-4.jpg\"/>\n        </div>\n        <div className=\"image-block-mobile\">\n            <img alt=\"flapimas video\" src=\"https://res.cloudinary.com/muniatu/image/upload/v1587393395/flapimas/flapimas-optimal.gif\"/>\n        </div>\n        <div className=\"rowfix\"></div>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport './menu.scss';\nimport '../index.scss';\nimport MetaTags from 'react-meta-tags';\nimport {\n    Link\n  } from \"react-router-dom\";\n\nexport default () =>\n    <div className=\"menu-wrapper\">\n        <MetaTags>\n            <title>Adrià Compte | Personal Website</title>\n            <meta name=\"description\" content=\"Adrià Compte | Product Designer & Frontend Developer\" />\n            <meta property=\"og:title\" content=\"Adrià Compte | Personal Website\" />\n        </MetaTags>\n        <ul className=\"main-menu\">\n            <li>\n                <Link to=\"/solojuegos\">Solojuegos</Link>\n            </li>\n            <li>\n                <Link to=\"/filehippo\">Filehippo</Link>\n            </li>\n            <li>\n                <Link to=\"/tokoro\">Tokoro</Link>\n            </li>\n            <li>\n                <Link to=\"/flapimas\">Flapimas</Link>\n            </li>\n        </ul>\n    </div>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Solojuegos from './pages/Solojuegos'\nimport Filehippo from './pages/Filehippo'\nimport Tokoro from './pages/Tokoro'\nimport Flapimas from './pages/Flapimas'\nimport Menu from './pages/Menu'\nimport './index.scss';\nimport 'lato-font';\n    \nimport {\n      BrowserRouter as Router,\n      Switch,\n      Route,\n    } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n            <Menu />\n        </Route>\n        <Route path=\"/solojuegos\">\n          <Solojuegos />\n        </Route>\n        <Route path=\"/filehippo\">\n          <Filehippo />\n        </Route>\n        <Route path=\"/tokoro\">\n          <Tokoro />\n        </Route>\n        <Route path=\"/flapimas\">\n          <Flapimas />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}